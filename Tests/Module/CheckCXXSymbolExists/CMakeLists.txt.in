PROJECT(CheckCXXSymbolExistsTest CXX)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8 FATAL_ERROR)

SET(CMAKE_REQUIRED_INCLUDES "@CMAKE_CURRENT_SOURCE_DIR@/../CheckSymbolExists")

INCLUDE(CheckCXXSymbolExists)

foreach(_config_type Release RelWithDebInfo MinSizeRel Debug)
  set(CMAKE_TRY_COMPILE_CONFIGURATION ${_config_type})
  MESSAGE(STATUS "Testing configuration ${_config_type}")
  check_cxx_symbol_exists(non_existent_function_for_symbol_test "cm_cse.h" CSE_RESULT_${_config_type})

  IF (CSE_RESULT_${_config_type})
    MESSAGE(SEND_ERROR "CheckCXXSymbolExists reported a nonexistent symbol as existing in configuration ${_config_type}")
  ELSE (CSE_RESULT_${_config_type})
    MESSAGE(STATUS "Nonexistent symbol was not found")
  ENDIF (CSE_RESULT_${_config_type})
endforeach()

set(CMAKE_TRY_COMPILE_CONFIGURATION ${CMAKE_BUILD_TYPE})

check_cxx_symbol_exists(errno "errno.h" CSE_RESULT_ERRNO)

IF (NOT CSE_RESULT_ERRNO)
  MESSAGE(FATAL_ERROR "CheckCXXSymbolExists did not find errno in <errno.h>")
ELSE (NOT CSE_RESULT_ERRNO)
  MESSAGE(STATUS "errno found as expected")
ENDIF (NOT CSE_RESULT_ERRNO)

IF (CMAKE_COMPILER_IS_GNUCXX)
  SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -O3")
  MESSAGE(STATUS "Testing with optimization -O3")

  check_cxx_symbol_exists(non_existent_function_for_symbol_test "cm_cse.h" CSE_RESULT_O3)

  IF (CSE_RESULT_O3)
    MESSAGE(SEND_ERROR "CheckCXXSymbolExists reported a nonexistent symbol as existing with optimization -O3")
  ELSE (CSE_RESULT_O3)
    MESSAGE(STATUS "Nonexistent symbol was not found")
  ENDIF (CSE_RESULT_O3)
ENDIF (CMAKE_COMPILER_IS_GNUCXX)
